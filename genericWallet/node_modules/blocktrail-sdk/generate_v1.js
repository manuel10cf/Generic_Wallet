var blocktrail = require('./main'); // require('blocktrail-sdk') when trying example from in your own project
var crypto = require('crypto');
var fs = require('fs');
var path = require('path');

var LIBPATH = path.normalize(__dirname + '/..');

var client = blocktrail.BlocktrailSDK({
    apiKey : '0555888cfa4244d9ae6460d0a9345909305f27e3',//process.env.BLOCKTRAIL_SDK_APIKEY,
    apiSecret : 'eaacc74ed61d6e40db93c6ab31640da57a0efa02',//process.env.BLOCKTRAIL_SDK_APISECRET,
    network: 'BTC',
    testnet: false
});

var primary = "give pause forget seed dance crawl situate hole keen";
var backup = "give pause forget seed dance crawl situate hole give";
var password = "password";
var identifier = "js_v1_derivationb";
var keyIndex = 9999;
var paths = [
    "M/9999'/0/0",
    "M/9999'/0/50",
    "M/9999'/0/149",
    "M/9999'/1/0",
    "M/9999'/1/50",
    "M/9999'/1/149",
    "M/9999'/2/0",
    "M/9999'/2/50",
    "M/9999'/2/149"
];

client.createNewWallet({
    keyIndex: keyIndex,
    walletVersion: "v1",
    identifier: identifier,
    passphrase: password,
    primaryMnemonic: primary,
    backupMnemonic: backup,
    storePrimaryMnemonic: true,
    segwit: true
}).then(function (data) {
    console.log("create wallet");
    var wallet = data[0]
    var backupInfo = data[1];

    var results = [];
    for (var i = 0; i < paths.length; i++) {
        var path = paths[i];
        var s = wallet.getWalletScriptByPath(path);
        results.push({
            path: path,
            scriptPubKey: s.scriptPubKey.toString('hex'),
            redeemScript: s.redeemScript ? s.redeemScript.toString('hex') : '',
            witnessScript: s.witnessScript ? s.witnessScript.toString('hex') : '',
            address: s.address
        })
    }

    console.log(JSON.stringify({
        primary: primary,
        backup: backup,
        results: results
    }, null, 2));

    wallet.deleteWallet(true).then(function () {
        console.log("deleted wallet");
    }, function (de) {
        console.log("delete error");
    })
}, function (createErr) {
    console.log("createErr", createErr.message);
})
