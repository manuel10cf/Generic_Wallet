var blocktrail = require('./main'); // require('blocktrail-sdk') when trying example from in your own project
var crypto = require('crypto');
var fs = require('fs');
var path = require('path');

var LIBPATH = path.normalize(__dirname + '/..');

var client = blocktrail.BlocktrailSDK({
    apiKey : '0555888cfa4244d9ae6460d0a9345909305f27e3',//process.env.BLOCKTRAIL_SDK_APIKEY,
    apiSecret : 'eaacc74ed61d6e40db93c6ab31640da57a0efa02',//process.env.BLOCKTRAIL_SDK_APISECRET,
    network: 'BTC',
    testnet: false
});

var primary = "give pause forget seed dance crawl situate hole keen";
var backup = "give pause forget seed dance crawl situate hole give";
var password = "password";
var identifier = "ypathaaaa";
var keyIndex = 9999;
var idx = '';

var params = {
    keyIndex: keyIndex,
    walletVersion: "v1",
    identifier: identifier,
    passphrase: password,
    primaryMnemonic: primary,
    backupMnemonic: backup,
    storePrimaryMnemonic: false,
    segwit: true
};
console.log(params);
function createWallet() {
    return client.createNewWallet(params)
}

createWallet().then(
    function (wallet) {
        return wallet[0];
    },
    function () {
        return client.initWallet(params);
    }).then(function (wallet) {
        function done() {
            wallet.deleteWallet(true).then(function () {
                console.log("deleted wallet");
            }, function (de) {
                console.log("delete error");
                console.log(de);
            });
        }

        wallet.getNewAddress(idx).then(function (res) {
            console.log("idx ", idx);
            console.log("res ", idx);
            done();
        }, function (addrErr) {
            console.log("address error");
            console.log(addrErr.message);
            done();
        });
    });
