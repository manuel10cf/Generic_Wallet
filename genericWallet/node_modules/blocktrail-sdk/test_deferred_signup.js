var blocktrail = require('./main');
var APIClient = blocktrail.BlocktrailSDK;
var client = blocktrail.BlocktrailSDK({
  apiKey : process.env.BLOCKTRAIL_SDK_APIKEY,
  apiSecret : process.env.BLOCKTRAIL_SDK_APISECRET,
  testnet : true
});

var identifier = "test-v3-testdeferred1";
var passphrase = 'alakvnjaksdfjakskbfasdhjfbasdfalsdfkasjbdfmnabasdufiuwebfasafndmbaxcnasxlabgfngbdsbgksfjgb';

var explainer = [];
  explainer[APIClient.CREATE_WALLET_PROGRESS_START] = 'creating wallet, progress: start';
explainer[APIClient.CREATE_WALLET_PROGRESS_PRIMARY] = 'progress: creating primary seed';
explainer  [APIClient.CREATE_WALLET_PROGRESS_BACKUP] = 'progress: creating backup';
explainer[APIClient.CREATE_WALLET_PROGRESS_SUBMIT] = 'progress: backup submit';
explainer[APIClient.CREATE_WALLET_PROGRESS_INIT] = 'progress: init';
explainer[APIClient.CREATE_WALLET_PROGRESS_DONE] = 'progress: done';

var time = new Date().getTime()
var now

console.log('progress: test BEGINS');
client.createNewWallet({
  identifier: identifier,
  passphrase: passphrase,
  walletVersion: APIClient.Wallet.WALLET_VERSION_V3,
  keyIndex: 9999
}).then(function (response) {
  [wallet, backupInfo] = response;

  wallet.deleteWallet()
    .then(function () {
      console.log('wallet deleted');
    });
}, function (err) {
  return console.log("createNewWallet ERR", err);
}, function (notify) {
  now = new Date().getTime()
  console.log('progress ' + notify + "% " + (now - time) + " ms "+" : " , explainer[notify]);
  time = new Date().getTime()
});
