    var blocktrail = require('./main'); // require('blocktrail-sdk') when trying example from in your own project
var crypto = require('crypto');
var fs = require('fs');
var path = require('path');

var LIBPATH = path.normalize(__dirname + '/..');

var client = blocktrail.BlocktrailSDK({
    apiKey : process.env.BLOCKTRAIL_SDK_APIKEY,
    apiSecret : process.env.BLOCKTRAIL_SDK_APISECRET,
    network: 'BTC',
    testnet: true
});

//create a new wallet
var walletIdentifier = 'segwit9999b';
var password = 'iHguXTT`~]6z\'%4"*NMd|G2L"/eq6g*\\$<YkKwoCTK;qb~Yf#v';
var keyPath = "M/9999'/2/0";

client
    .initWallet({identifier: walletIdentifier, keyIndex: 9999, password: password})
    .then(function(wallet) {
        console.log(wallet)
        wallet.chain = 2

        wallet
            .getBalance()
            .then(function (bal) {
                console.log(bal)

                return wallet.getNewAddress()

            })
            .then(function (address) {
                console.log('heres an addres', address)
                var totalIn = 0;
                wallet.utxos({}, function (err, utxos) {
                    console.log(utxos)
                    utxos.data.map(function (utxo) {
                        totalIn += utxo.value
                    });

                    var payOut = parseInt(Math.ceil(totalIn - totalIn * 0.05),10)
                    console.log("try pay out ", payOut)
                    wallet.pay({
                        'tb1qn08f8x0eamw66enrt497zu0v3u2danzey6asqs': payOut
                    }, function (err, res) {
                        console.log("paid")
                        console.log(err)
                        console.log(res)
                    })
                });
            })

        // self.buildTransaction(pay, changeAddress, allowZeroConf, randomizeChangeIdx, feeStrategy, options)
        //     .then(
        //         function(r) { return r; },
        //         function(e) { deferred.reject(e); },
        //         function(progress) {
        //             deferred.notify(progress);
        //         }
        //     )


    }, function (err) {
        console.log("createNewWallet ERR", err);
    });
