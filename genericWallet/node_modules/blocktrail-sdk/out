

  using promises
    ✓ should work for address request
    ✓ should work for verify address request

  SDK general
    ✓ test Coin Value
    ✓ test auth failure

  data api
    ✓ test address
    ✓ test addressTransactions
    ✓ test addressUnconfirmedTransactions
    ✓ test addressUnspentOutputs
    ✓ test batchAddressUnspentOutputs
    ✓ test verifyAddress
    ✓ test block by hash
    ✓ test block by height
    ✓ test blockTransactions
    ✓ test allBlocks
    ✓ test blockLatest
    ✓ test coinbase transaction
    ✓ test random transaction #1
    ✓ test batch transactions

  webhooks api
    ✓ create new webhook with custom identifier
    ✓ create new webhook with random identifier
    ✓ get all user webhooks
    ✓ get a single webhook
    ✓ delete a webhook
    ✓ update a webhook
    ✓ subscribe to address-transaction events
    ✓ subscribe to transaction event
    ✓ subscribe to new block events
    ✓ batch subscribe to address-transaction events
    ✓ get webhook event subscriptions
    ✓ unsubscribe from address-transaction events
    ✓ unsubscribe from new transaction events
    ✓ unsubscribe from new block events

  market api
    ✓ should have a price

  verify message
    ✓ should verify using bitcoinjs-lib
    ✓ should handle errors nicely
    ✓ should verify using API

  send raw
    ✓ should report TX is already in blockchain
    ✓ should error decode failed

  buffer
    ✓ should reverse

  key derivation
    ✓ vector 0 produces the right key
    ✓ vector 1 produces the right key
    ✓ vector 2 produces the right key

  encryption
    ✓ vector 0 demonstrates properties of GCM
    ✓ vector 1 demonstrates properties of GCM

  mnemonic
    ✓ vector 0 can be encoded & decoded
    ✓ vector 1 can be encoded & decoded
    ✓ vector 2 can be encoded & decoded

  wallet
    ✓ should allow password RESET
    ✓ uses secret to decrypt primarySeed
    ✓ encryption should produce valid encryption of the wallet seed

  InsightBitcoinService
    ✓ defaults to bitpay on mainnet
    ✓ uses bitpays testnet server if host is not set
    ✓ uses bitpays testnet server if host is not set
    ✓ ignores testnet option if host is set: testnet
    ✓ ignores testnet option if host is set: mainnet
    ✓ issues POST requests
    ✓ issues GET requests

  test new blank wallet, v2
    ✓ shouldn't already exist
    ✓ should be created
    ✓ should lock
    ✓ should init
    ✓ should have a 0 balance
    ✓ shouldn't be able to pay when locked
    ✓ shouldn't be able to upgrade when locked
    ✓ should unlock
    ✓ should be able to unlock with secret
    ✓ shouldn't be able to pay when unlocked (because of no balance)
    ✓ should be able to upgrade when unlocked
    ✓ should be able to password change

  test new blank wallet, v3
    ✓ shouldn't already exist
    ✓ should be created (1161ms)
    ✓ should lock
    ✓ should init
    ✓ should have a 0 balance
    ✓ shouldn't be able to pay when locked
    ✓ shouldn't be able to upgrade when locked
    ✓ should unlock
    ✓ should be able to unlock with secret
    ✓ shouldn't be able to pay when unlocked (because of no balance)
    ✓ should be able to upgrade when unlocked
    ✓ should be able to password change

  test new blank wallet, null
    ✓ shouldn't already exist
    ✓ should be created
    ✓ should lock
    ✓ should init
    ✓ should have a 0 balance
    ✓ shouldn't be able to pay when locked
    ✓ shouldn't be able to upgrade when locked
    ✓ should unlock
    ✓ should be able to unlock with secret
    ✓ shouldn't be able to pay when unlocked (because of no balance)
    ✓ should be able to upgrade when unlocked
    ✓ should be able to password change

  test input errors, v1
    ✓ shouldn't allow primaryPrivateKey in creation
    ✓ shouldn't allow unlocking with primaryPrivateKey

  test input errors, v2
    ✓ shouldn't allow primaryPrivateKey in creation
    ✓ shouldn't allow unlocking with primaryPrivateKey

  test input errors, v3
    ✓ shouldn't allow primaryPrivateKey in creation
    ✓ shouldn't allow unlocking with primaryPrivateKey (763ms)

  upgrade to V3 from v1
    ✓ can upgrade (1185ms)
    ✓ can unlock with secret
    ✓ can init after upgrade
null true

  upgrade to V3 from v2
    ✓ can upgrade (1213ms)
    ✓ can unlock with secret
    ✓ can init after upgrade
null true

  test new blank wallet, v1
    ✓ shouldn't already exist
    ✓ should be created
    ✓ should lock
    ✓ should init
    ✓ should have a 0 balance
    ✓ should unlock
    ✓ shouldn't be able to password change

  test new blank wallet, old syntax
    ✓ shouldn't already exist
    ✓ should be created
    ✓ should have a 0 balance
    ✓ shouldn't be able to pay

  test new wallet, without mnemonics
    ✓ shouldn't already exist
    ✓ should be created
    ✓ should be initializable
    ✓ should have a 0 balance
    ✓ shouldn't be able to pay

  test wallet, do transaction
    ✓ should exists
    ✓ should have the expected addresses
    ✓ should have a balance
    ✓ should return errors when expected
    1) should be able to build a transaction paying a bech32 address
    ✓ change should be randomized when building a transaction (3151ms)
    ✓ should be able to do a payment (2624ms)

  test wallet, do transaction, without mnemonics
    ✓ should exists
    ✓ should have the expected addresses
    ✓ should have a balance
    ✓ should be able to do a payment (2585ms)

  test wallet, do opreturn transaction
    ✓ should exists
    ✓ should be able to do a payment with opreturn output (2813ms)

  test wallet, do forcefee transaction
    ✓ should exists
    ✓ should be able to do a payment with forced fee (2325ms)

  test wallet discovery and upgrade key index
    ✓ should be created
    ✓ should have the expected addresses (1869ms)
    ✓ should have a balance after discovery (2784ms)
    ✓ should be upgraded and have expected addresses (1356ms)

  test wallet with bad password
    ✓ should be created
    ✓ should have the expected addresses (different from with the correct password) (941ms)
    ✓ shouldn't have a balance after discovery (3102ms)

  test wallet webhook
    ✓ shouldn't already exist
    ✓ should be created
    ✓ should have a 0 balance
    ✓ should be able to create a webhook
    ✓ should be able to create a webhook with custom identifier (3109ms)

  test wallet list transactions and addresses
    ✓ should exists
    ✓ should list expected transactions
    ✓ should list expected addresses
    ✓ should list UTXOs

  size estimation
    ✓ should estimate proper size for 1 input 1 output TX
    ✓ should estimate proper size for 99 inputs 1 output TX
    ✓ should estimate proper size for 1 input 99 outputs TX

  APIClient
    ✓ resolvePrimaryPrivateKeyFromOptions

  webworkifier
    ✓ is not used on NodeJS


  156 passing (1m)
  1 failing

  1) test wallet, do transaction should be able to build a transaction paying a bech32 address:
     Uncaught InvalidAddressError: Invalid address [tb1qn08f8x0eamw66enrt497zu0v3u2danzey6asqs] (Non-base58 character)
      at lib/wallet.js:930:23
      at Array.forEach (native)
      at lib/wallet.js:911:26
      at flush (node_modules/q/q.js:108:17)
      at _combinedTickCallback (internal/process/next_tick.js:67:7)
      at process._tickCallback (internal/process/next_tick.js:98:9)



